package br.com.hackprovi.proviHack.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import br.com.hackprovi.proviHack.models.User;
import br.com.hackprovi.proviHack.repositories.UserRepository;
import br.com.hackprovi.proviHack.services.exceptions.ForbiddenException;
import br.com.hackprovi.proviHack.services.exceptions.UnauthorizedException;

@Service
public class AuthService {
	
	@Autowired private UserRepository userRepository;
	
	@Transactional(readOnly = true)
	public User authenticated() {
		try {
		String username = SecurityContextHolder.getContext().getAuthentication().getName();
		return userRepository.findByEmail(username);
		}catch (Exception e) {
			throw new UnauthorizedException("Usuário inválido");
		}
		
	}
	
	public void validateSelf(Long userId) {
		User user = authenticated();
		if(!user.getId().equals(userId)) {
			throw new ForbiddenException("Acesso negado");
		}
	}

}
